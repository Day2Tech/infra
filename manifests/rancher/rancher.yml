---
# Source: rancher/templates/serviceAccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: rancher
---
# Source: rancher/templates/clusterRoleBinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rancher
subjects:
  - kind: ServiceAccount
    name: rancher
    namespace: rancher
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: rancher/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rancher
spec:
  ports:
    - port: 80
---
# Source: rancher/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rancher
spec:
  strategy:
    type: Recreate
  template:
    spec:
      serviceAccountName: rancher
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - rancher
                topologyKey: kubernetes.io/hostname
      containers:
        - image: rancher/rancher:v2.4.5
          imagePullPolicy: IfNotPresent
          name: rancher
          ports:
            - containerPort: 80
              protocol: TCP
          args:
            # Public trusted CA - clear ca certs
            - "--no-cacerts"
            - "--http-listen-port=80"
            - "--https-listen-port=443"
            - "--add-local=auto"
          env:
            - name: CATTLE_NAMESPACE
              value: rancher
            - name: CATTLE_PEER_SERVICE
              value: rancher
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 30
          resources:
            requests:
              memory: 512Mi
              cpu: 100m
            limits:
              memory: 2048Mi
              cpu: 1000m
          volumeMounts:
            - name: storage
              mountPath: "/var/lib/rancher"
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: rancher-storage
---
# Source: rancher/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rancher
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
spec:
  rules:
    - host: rancher.day2.tech
      http:
        paths:
          - backend:
              serviceName: rancher
              servicePort: 80
  tls:
    - hosts:
        - rancher.day2.tech
      secretName: rancher-day2-tech-tls
---
